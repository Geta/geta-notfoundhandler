name: Release
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  build:
    name: Release
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Verify commit exists in origin/master
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/master
      - name: Set VERSION variable from tag
        run: |
          $version = ("${{github.ref_name}}").Remove(0, 1)
          echo "VERSION=$version" >> $env:GITHUB_ENV
      - name: Release
        run: |
          echo "${env:VERSION}"
          dotnet build --configuration Release /p:Version=${{env.VERSION}}
      - name: Test
        run: dotnet test --configuration Release /p:Version=${{env.VERSION}} --no-build
      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${{env.VERSION}} --no-build --output .
      - name: Push
        run: |
          dotnet nuget push Geta.NotFoundHandler.${{env.VERSION}}.nupkg --source https://nuget.pkg.github.com/Geta/index.json --api-key ${{env.GITHUB_TOKEN}}
          dotnet nuget push Geta.NotFoundHandler.Admin.${{env.VERSION}}.nupkg --source https://nuget.pkg.github.com/Geta/index.json --api-key ${{env.GITHUB_TOKEN}}
          dotnet nuget push Geta.NotFoundHandler.Optimizely.${{env.VERSION}}.nupkg --source https://nuget.pkg.github.com/Geta/index.json --api-key ${{env.GITHUB_TOKEN}}
          dotnet nuget push Geta.NotFoundHandler.Optimizely.Commerce.${{env.VERSION}}.nupkg --source https://nuget.pkg.github.com/Geta/index.json --api-key ${{env.GITHUB_TOKEN}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
